{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { footerTheme } from './theme.js';\nconst FooterLink = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([footerTheme.groupLink.link, provider.theme?.footer?.groupLink?.link, props.theme], [get(provider.clearTheme, \"footer.groupLink.link\"), props.clearTheme], [get(provider.applyTheme, \"footer.groupLink.link\"), props.applyTheme]);\n  const {\n    as: Component = \"a\",\n    className,\n    href,\n    ...restProps\n  } = resolveProps(props, provider.props?.footerLink);\n  return /* @__PURE__ */jsx(\"li\", {\n    ref,\n    className: twMerge(theme.base, className),\n    children: /* @__PURE__ */jsx(Component, {\n      href,\n      className: theme.href,\n      ...restProps\n    })\n  });\n});\nFooterLink.displayName = \"FooterLink\";\nexport { FooterLink };","map":{"version":3,"names":["FooterLink","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","footerTheme","groupLink","link","footer","get","clearTheme","applyTheme","as","Component","className","href","restProps","resolveProps","footerLink","jsx","twMerge","base","children"],"sources":["../../../src/components/Footer/FooterLink.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type ElementType } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { footerTheme } from \"./theme\";\n\nexport interface FooterLinkTheme {\n  base: string;\n  href: string;\n}\n\nexport interface FooterLinkProps extends ComponentProps<\"a\">, ThemingProps<FooterLinkTheme> {\n  as?: ElementType;\n  href: string;\n}\n\nexport const FooterLink = forwardRef<HTMLLIElement, FooterLinkProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [footerTheme.groupLink.link, provider.theme?.footer?.groupLink?.link, props.theme],\n    [get(provider.clearTheme, \"footer.groupLink.link\"), props.clearTheme],\n    [get(provider.applyTheme, \"footer.groupLink.link\"), props.applyTheme],\n  );\n\n  const { as: Component = \"a\", className, href, ...restProps } = resolveProps(props, provider.props?.footerLink);\n\n  return (\n    <li ref={ref} className={twMerge(theme.base, className)}>\n      <Component href={href} className={theme.href} {...restProps} />\n    </li>\n  );\n});\n\nFooterLink.displayName = \"FooterLink\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,UAAc,GAAGC,UAAA,EAAAC,KAAgB,EAAEC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAe,CAC3B,CAACC,WAAI,CAAQC,SAAC,CAAAC,IAAY,EAAAN,QAAA,CAAAE,KAAA,EAAAK,MAAwB,EAAEF,SAAM,EAAAC,IAAU,EAACR,KAAA,CAAAI,KAAA,GACrE,CAACM,GAAG,CAACR,QAAQ,CAACS,UAAU,EAAE,uBAAuB,CAAC,EAAEX,KAAK,CAACW,UAAU,GACrE,CAAAD,GAAA,CAAAR,QAAA,CAAAU,UAAA,4BAAAZ,KAAA,CAAAY,UAAA,CACD;EACA;IAAAC,EAAA,EAAAC,SAAA,GAAuB,GAAI;IAAAC,SAAW;IAAEC,IAAA;IAAA,GAASC;EAAU,IAAAC,YAAY,CAAAlB,KAAU,EAAEE,QAAQ,CAAAF,KAAA,EAAAmB,UAAkB;EAC9G,sBAAAC,GAAA;IAAAnB,GAAA;IAAAc,SAAA,EAAAM,OAAA,CAAAjB,KAAA,CAAAkB,IAAA,EAAAP,SAAA;IAAAQ,QAAA,iBAAAH,GAAA,CAAAN,SAAA;MAAAE,IAAA;MAAAD,SAAA,EAAAX,KAAA,CAAAY,IAAA;MAAA,GAAAC;IAAA;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
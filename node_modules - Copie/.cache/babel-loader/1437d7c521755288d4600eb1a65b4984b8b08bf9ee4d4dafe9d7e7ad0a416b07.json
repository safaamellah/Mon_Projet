{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { selectTheme } from './theme.js';\nconst Select = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([selectTheme, provider.theme?.select, props.theme], [get(provider.clearTheme, \"select\"), props.clearTheme], [get(provider.applyTheme, \"select\"), props.applyTheme]);\n  const {\n    addon,\n    className,\n    color = \"gray\",\n    icon: Icon,\n    shadow,\n    sizing = \"md\",\n    ...restProps\n  } = resolveProps(props, provider.props?.select);\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: twMerge(theme.base, className),\n    children: [addon && /* @__PURE__ */jsx(\"span\", {\n      className: theme.addon,\n      children: addon\n    }), /* @__PURE__ */jsxs(\"div\", {\n      className: theme.field.base,\n      children: [Icon && /* @__PURE__ */jsx(\"div\", {\n        className: theme.field.icon.base,\n        children: /* @__PURE__ */jsx(Icon, {\n          className: theme.field.icon.svg\n        })\n      }), /* @__PURE__ */jsx(\"select\", {\n        ref,\n        className: twMerge(theme.field.select.base, theme.field.select.colors[color], theme.field.select.sizes[sizing], theme.field.select.withIcon[Icon ? \"on\" : \"off\"], theme.field.select.withAddon[addon ? \"on\" : \"off\"], theme.field.select.withShadow[shadow ? \"on\" : \"off\"]),\n        ...restProps\n      })]\n    })]\n  });\n});\nSelect.displayName = \"Select\";\nexport { Select };","map":{"version":3,"names":["Select","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","selectTheme","select","get","clearTheme","applyTheme","addon","className","color","icon","Icon","shadow","sizing","restProps","resolveProps","jsxs","twMerge","base","children","jsx","field","svg","colors","sizes","withIcon","withAddon","withShadow"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\Select\\Select.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type {\n  DynamicStringEnumKeysOf,\n  FlowbiteBoolean,\n  FlowbiteColors,\n  FlowbiteSizes,\n  ThemingProps,\n} from \"../../types\";\nimport { selectTheme } from \"./theme\";\n\nexport interface SelectTheme {\n  base: string;\n  addon: string;\n  field: {\n    base: string;\n    icon: {\n      base: string;\n      svg: string;\n    };\n    select: {\n      base: string;\n      withIcon: FlowbiteBoolean;\n      withAddon: FlowbiteBoolean;\n      withShadow: FlowbiteBoolean;\n      sizes: SelectSizes;\n      colors: SelectColors;\n    };\n  };\n}\n\nexport interface SelectColors extends Pick<FlowbiteColors, \"gray\" | \"info\" | \"failure\" | \"warning\" | \"success\"> {\n  [key: string]: string;\n}\n\nexport interface SelectSizes extends Pick<FlowbiteSizes, \"sm\" | \"md\" | \"lg\"> {\n  [key: string]: string;\n}\n\nexport interface SelectProps extends Omit<ComponentProps<\"select\">, \"color\" | \"ref\">, ThemingProps<SelectTheme> {\n  addon?: ReactNode;\n  color?: DynamicStringEnumKeysOf<SelectColors>;\n  icon?: FC<ComponentProps<\"svg\">>;\n  shadow?: boolean;\n  sizing?: DynamicStringEnumKeysOf<SelectSizes>;\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [selectTheme, provider.theme?.select, props.theme],\n    [get(provider.clearTheme, \"select\"), props.clearTheme],\n    [get(provider.applyTheme, \"select\"), props.applyTheme],\n  );\n\n  const {\n    addon,\n    className,\n    color = \"gray\",\n    icon: Icon,\n    shadow,\n    sizing = \"md\",\n    ...restProps\n  } = resolveProps(props, provider.props?.select);\n\n  return (\n    <div className={twMerge(theme.base, className)}>\n      {addon && <span className={theme.addon}>{addon}</span>}\n      <div className={theme.field.base}>\n        {Icon && (\n          <div className={theme.field.icon.base}>\n            <Icon className={theme.field.icon.svg} />\n          </div>\n        )}\n        <select\n          ref={ref}\n          className={twMerge(\n            theme.field.select.base,\n            theme.field.select.colors[color],\n            theme.field.select.sizes[sizing],\n            theme.field.select.withIcon[Icon ? \"on\" : \"off\"],\n            theme.field.select.withAddon[addon ? \"on\" : \"off\"],\n            theme.field.select.withShadow[shadow ? \"on\" : \"off\"],\n          )}\n          {...restProps}\n        />\n      </div>\n    </div>\n  );\n});\n\nSelect.displayName = \"Select\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,MAAM,GAAAC,UAAW,EAAAC,KAAA,EAAAC,GAAkB;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAW,CACvB,CAACC,WAAI,EAASJ,QAAA,CAAAE,KAAY,EAAAG,MAAS,EAAEP,KAAM,CAAAI,KAAA,GAC3C,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,QAAQ,CAAC,EAAET,KAAK,CAACS,UAAU,GACtD,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,aAAAV,KAAA,CAAAU,UAAA,CACD;EACF,MAAI;IACAC,KAAA;IACAC,SAAQ;IACRC,KAAI,GAAE,MAAI;IACVC,IAAA,EAAMC,IAAA;IACNC,MAAM;IACNC,MAAG;IACJ,GAAGC;EACJ,IAAAC,YAAA,CAAAnB,KAAA,EAAuBE,QAAK,CAAKF,KAAI,EAAAO,MAAS;EAChD,OAAS,eAAAa,IAAoB,MAAI;IAAMR,SAAI,EAAAS,OAAW,CAAAjB,KAAM,CAAAkB,IAAO,EAAAV,SAAU;IAAKW,QAAG,GACrFZ,KAAA,mBAAyBa,GAAO,OAAE;MAASZ,SAAQ,EAAAR,KAAM,CAAAO,KAAM;MAAAY,QAAU,EAAAZ;IAAA,IACzE,eAAUS,IAAA,MAAoB;MAAIR,SAAS,EAAAR,KAAA,CAAAqB,KAAW,CAAAH,IAAM;MAAAC,QAAW,GACvER,IAAA,mBAAyBS,GAAA;QAAAZ,SAAA,EAAAR,KAAA,CAAAqB,KAAA,CAAAX,IAAA,CAAAQ,IAAA;QAAAC,QAAA,iBAAAC,GAAA,CAAAT,IAAA;UAAAH,SAAA,EAAAR,KAAA,CAAAqB,KAAA,CAAAX,IAAA,CAAAY;QAAA;MAAA,IACzB,eAAgBF,GAAA,CACR,UACR;QACUvB,GAAA;QACVW,SAAkB,EAAAS,OAAM,CACZjB,KAAK,CAACqB,KAAK,CAAClB,MAAM,CAACe,IAAA,EACnBlB,KAAK,CAACqB,KAAK,CAAClB,MAAM,CAACoB,MAAM,CAAAd,KAAM,CAAC,EAChCT,KAAK,CAACqB,KAAK,CAAClB,MAAM,CAACqB,KAAA,CAAAX,MAAS,CAAI,EAChCb,KAAK,CAACqB,KAAK,CAAClB,MAAM,CAACsB,QAAA,CAASd,IAAC,GAAK,IAAG,GAAI,KAAG,GAC5CX,KAAK,CAACqB,KAAK,CAAClB,MAAM,CAACuB,SAAA,CAAUnB,KAAC,GAAM,IAAG,GAAI,KAAG,GAC/CP,KAAA,CAAAqB,KAAA,CAAAlB,MAAA,CAAAwB,UAAA,CAAAf,MAAA,gBACD;QACV,GAAAE;MACA,CACK,CAAE;IACD;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
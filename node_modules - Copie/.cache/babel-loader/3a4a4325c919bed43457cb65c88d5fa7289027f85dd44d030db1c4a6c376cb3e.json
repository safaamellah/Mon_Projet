{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { hrTheme } from './theme.js';\nconst HR = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([hrTheme.root, provider.theme?.hr?.root, props.theme], [get(provider.clearTheme, \"hr.root\"), props.clearTheme], [get(provider.applyTheme, \"hr.root\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.hr);\n  return /* @__PURE__ */jsx(\"hr\", {\n    ref,\n    className: twMerge(theme.base, className),\n    \"data-testid\": \"flowbite-hr\",\n    role: \"separator\",\n    ...restProps\n  });\n});\nHR.displayName = \"HR\";\nexport { HR };","map":{"version":3,"names":["HR","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","hrTheme","root","hr","get","clearTheme","applyTheme","className","restProps","resolveProps","jsx","twMerge","base","role"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\HR\\HR.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps } from \"react\";\nimport { forwardRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport type { HRIconTheme } from \"./HRIcon\";\nimport type { HRSquareTheme } from \"./HRSquare\";\nimport type { HRTextTheme } from \"./HRText\";\nimport type { HRTrimmedTheme } from \"./HRTrimmed\";\nimport { hrTheme } from \"./theme\";\n\nexport interface HRTheme {\n  root: HRRootTheme;\n  trimmed: HRTrimmedTheme;\n  icon: HRIconTheme;\n  text: HRTextTheme;\n  square: HRSquareTheme;\n}\n\nexport interface HRRootTheme {\n  base: string;\n}\n\nexport interface HRProps extends Omit<ComponentProps<\"hr\">, \"ref\">, ThemingProps<HRRootTheme> {}\n\nexport const HR = forwardRef<HTMLHRElement, HRProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [hrTheme.root, provider.theme?.hr?.root, props.theme],\n    [get(provider.clearTheme, \"hr.root\"), props.clearTheme],\n    [get(provider.applyTheme, \"hr.root\"), props.applyTheme],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.hr);\n\n  return (\n    <hr\n      ref={ref}\n      className={twMerge(theme.base, className)}\n      data-testid=\"flowbite-hr\"\n      role=\"separator\"\n      {...restProps}\n    />\n  );\n});\n\nHR.displayName = \"HR\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,EAAM,GAAAC,UAAW,EAAAC,KAAA,EAAAC,GAAA,KAAkB;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAQ,GAAAC,eAAe,CACxB,CAACC,OAAI,CAAAC,IAAQ,EAACL,QAAA,CAAUE,KAAE,EAAAI,EAAA,EAASD,IAAG,EAAAP,KAAM,CAAAI,KAAA,GAC5C,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,SAAS,CAAC,EAAEV,KAAK,CAACU,UAAU,GACvD,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,cAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,SAAA;IAAA,GAAAC;EAA0B,IAAAC,YAAA,CAAAd,KAAA,EAAAE,QAAA,CAAAF,KAAA,EAAAQ,EAAA;EAC5B,OAAQ,eAAAO,GAAA,CACJ,MACJ;IACMd,GAAA;IACAW,SAAA,EAAAI,OAAe,CAAAZ,KAAA,CAAAa,IAAa,EAAAL,SAAA;IAC5B,aAAM,eAAW;IACjBM,IAAG;IACT,GAAAL;EACG,CACF;AACD,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
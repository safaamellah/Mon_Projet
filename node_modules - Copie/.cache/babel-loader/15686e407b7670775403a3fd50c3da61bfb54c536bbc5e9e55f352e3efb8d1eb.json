{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { BarsIcon } from '../../icons/bars-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useNavbarContext } from './NavbarContext.js';\nimport { navbarTheme } from './theme.js';\nconst NavbarToggle = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    isOpen,\n    setIsOpen\n  } = useNavbarContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([navbarTheme.toggle, provider.theme?.navbar?.toggle, rootTheme?.toggle, props.theme], [get(provider.clearTheme, \"navbar.toggle\"), get(rootClearTheme, \"toggle\"), props.clearTheme], [get(provider.applyTheme, \"navbar.toggle\"), get(rootApplyTheme, \"toggle\"), props.applyTheme]);\n  const {\n    barIcon: BarIcon = BarsIcon,\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.navbarToggle);\n  function handleClick() {\n    setIsOpen(!isOpen);\n  }\n  return /* @__PURE__ */jsxs(\"button\", {\n    ref,\n    \"data-testid\": \"flowbite-navbar-toggle\",\n    onClick: handleClick,\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: [/* @__PURE__ */jsx(\"span\", {\n      className: theme.title,\n      children: \"Open main menu\"\n    }), /* @__PURE__ */jsx(BarIcon, {\n      \"aria-hidden\": true,\n      className: theme.icon\n    })]\n  });\n});\nNavbarToggle.displayName = \"NavbarToggle\";\nexport { NavbarToggle };","map":{"version":3,"names":["NavbarToggle","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","isOpen","setIsOpen","useNavbarContext","provider","useThemeProvider","useResolveTheme","navbarTheme","toggle","navbar","get","barIcon","BarIcon","BarsIcon","className","restProps","resolveProps","navbarToggle","handleClick","jsxs","onClick","twMerge","base","children","jsx","title","icon"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\Navbar\\NavbarToggle.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type FC } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { BarsIcon } from \"../../icons/bars-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { useNavbarContext } from \"./NavbarContext\";\nimport { navbarTheme } from \"./theme\";\n\nexport interface NavbarToggleThem {\n  base: string;\n  icon: string;\n  title: string;\n}\n\nexport interface NavbarToggleProps extends ComponentProps<\"button\">, ThemingProps<NavbarToggleThem> {\n  barIcon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const NavbarToggle = forwardRef<HTMLButtonElement, NavbarToggleProps>((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    isOpen,\n    setIsOpen,\n  } = useNavbarContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [navbarTheme.toggle, provider.theme?.navbar?.toggle, rootTheme?.toggle, props.theme],\n    [get(provider.clearTheme, \"navbar.toggle\"), get(rootClearTheme, \"toggle\"), props.clearTheme],\n    [get(provider.applyTheme, \"navbar.toggle\"), get(rootApplyTheme, \"toggle\"), props.applyTheme],\n  );\n\n  const { barIcon: BarIcon = BarsIcon, className, ...restProps } = resolveProps(props, provider.props?.navbarToggle);\n\n  function handleClick() {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <button\n      ref={ref}\n      data-testid=\"flowbite-navbar-toggle\"\n      onClick={handleClick}\n      className={twMerge(theme.base, className)}\n      {...restProps}\n    >\n      <span className={theme.title}>Open main menu</span>\n      <BarIcon aria-hidden className={theme.icon} />\n    </button>\n  );\n});\n\nNavbarToggle.displayName = \"NavbarToggle\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,YAAM,GAAAC,UAAA,EAAAC,KAAA,EAAAC,GAAA;EACR,MAAI;IACAC,KAAA,EAAAC,SAAY;IACZC,UAAU,EAAEC,cAAc;IAC1BC,UAAM,EAAAC,cAAA;IACNC,MAAA;IACDC;EACD,IAAAC,gBAAiB;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKV,KAAA,GAAWW,eAAS,CACrB,CAACC,WAAI,CAAQC,MAAC,EAAAJ,QAAY,CAAAT,KAAA,EAAAc,MAAgB,EAAED,MAAI,EAAAZ,SAAc,EAAEY,MAAA,EAAQf,KAAG,CAAAE,KAAM,GACjF,CAACe,GAAG,CAACN,QAAQ,CAACP,UAAU,EAAE,eAAe,CAAC,EAAEa,GAAG,CAACZ,cAAc,EAAE,QAAQ,CAAC,EAAEL,KAAK,CAACI,UAAU,GAC5F,CAAAa,GAAA,CAAAN,QAAA,CAAAL,UAAA,oBAAAW,GAAA,CAAAV,cAAA,aAAAP,KAAA,CAAAM,UAAA,CACD;EACA;IAAAY,OAAS,EAAAC,OAAc,GAAAC,QAAA;IAAAC,SAAA;IAAA,GAAAC;EAAA,IAAAC,YAAA,CAAAvB,KAAA,EAAAW,QAAA,CAAAX,KAAA,EAAAwB,YAAA;EACzB,SAAIC,WAAkBA,CAAA;IACtBhB,SAAA,EAAAD,MAAA;EACE;EACF,OAAI,eAAQkB,IAAA,CACR,UACJ;IACMzB,GAAA;IACA,aAAS,0BAAW;IACpB0B,OAAA,EAASF,WAAU;IACnBJ,SAAG,EAAAO,OAAS,CAAA1B,KAAA,CAAA2B,IAAA,EAAAR,SAAA;IACZ,GAAAC,SAAU;IAChBQ,QAAA,GACA,eAAwBC,GAAG,CAAC,QAAO;MAAEV,SAAE,EAAAnB,KAAe,CAAA8B,KAAM;MAAAF,QAAS,EAAE;IAAY,IACnF,eAAAC,GAAA,CAAAZ,OAAA;MAAA;MAAAE,SAAA,EAAAnB,KAAA,CAAA+B;IAAA;EAEG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
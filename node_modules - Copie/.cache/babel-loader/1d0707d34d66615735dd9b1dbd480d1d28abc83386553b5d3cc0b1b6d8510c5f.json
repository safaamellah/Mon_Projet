{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { footerTheme } from './theme.js';\nconst FooterTitle = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([footerTheme.title, provider.theme?.footer?.title, props.theme], [get(provider.clearTheme, \"footer.title\"), props.clearTheme], [get(provider.applyTheme, \"footer.title\"), props.applyTheme]);\n  const {\n    as: Component = \"h2\",\n    className,\n    title,\n    ...restProps\n  } = resolveProps(props, provider.props?.footerTitle);\n  return /* @__PURE__ */jsx(Component, {\n    ref,\n    \"data-testid\": \"flowbite-footer-title\",\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: title\n  });\n});\nFooterTitle.displayName = \"FooterTitle\";\nexport { FooterTitle };","map":{"version":3,"names":["FooterTitle","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","footerTheme","title","footer","get","clearTheme","applyTheme","as","Component","className","restProps","resolveProps","footerTitle","jsx","twMerge","base","children"],"sources":["../../../src/components/Footer/FooterTitle.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type ElementType } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { footerTheme } from \"./theme\";\n\nexport interface FooterTitleTheme {\n  base: string;\n}\n\nexport interface FooterTitleProps extends ComponentProps<\"h2\">, ThemingProps<FooterTitleTheme> {\n  as?: ElementType;\n  title: string;\n}\n\nexport const FooterTitle = forwardRef<HTMLHeadElement, FooterTitleProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [footerTheme.title, provider.theme?.footer?.title, props.theme],\n    [get(provider.clearTheme, \"footer.title\"), props.clearTheme],\n    [get(provider.applyTheme, \"footer.title\"), props.applyTheme],\n  );\n\n  const { as: Component = \"h2\", className, title, ...restProps } = resolveProps(props, provider.props?.footerTitle);\n\n  return (\n    <Component ref={ref} data-testid=\"flowbite-footer-title\" className={twMerge(theme.base, className)} {...restProps}>\n      {title}\n    </Component>\n  );\n});\n\nFooterTitle.displayName = \"FooterTitle\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,WAAc,GAAGC,UAAA,EAAAC,KAAkB,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAQ,CACpB,CAACC,WAAI,CAAQC,KAAC,EAAAL,QAAY,CAAAE,KAAA,EAAAI,MAAe,EAAED,KAAM,EAAAP,KAAA,CAAAI,KAAW,GAC5D,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,cAAc,CAAC,EAAEV,KAAK,CAACU,UAAU,GAC5D,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,mBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,EAAA,EAAAC,SAAA,GAAuB,IAAI;IAAAC,SAAW;IAAEP,KAAK;IAAA,GAAAQ;EAAe,IAAAC,YAAA,CAAAhB,KAAuB,EAAEE,QAAA,CAASF,KAAE,EAAAiB,WAAc;EAC/G,sBAAAC,GAAA,CAAAL,SAAA;IAAAZ,GAAA;IAAA;IAAAa,SAAA,EAAAK,OAAA,CAAAf,KAAA,CAAAgB,IAAA,EAAAN,SAAA;IAAA,GAAAC,SAAA;IAAAM,QAAA,EAAAd;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useTableContext } from './TableContext.js';\nimport { tableTheme } from './theme.js';\nconst TableRow = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    hoverable,\n    striped\n  } = useTableContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([tableTheme.row, provider.theme?.table?.row, rootTheme?.row, props.theme], [get(provider.clearTheme, \"table.row\"), get(rootClearTheme, \"row\"), props.clearTheme], [get(provider.applyTheme, \"table.row\"), get(rootApplyTheme, \"row\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.tableRow);\n  return /* @__PURE__ */jsx(\"tr\", {\n    ref,\n    \"data-testid\": \"table-row-element\",\n    className: twMerge(theme.base, striped && theme.striped, hoverable && theme.hovered, className),\n    ...restProps\n  });\n});\nTableRow.displayName = \"TableRow\";\nexport { TableRow };","map":{"version":3,"names":["TableRow","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","hoverable","striped","useTableContext","provider","useThemeProvider","useResolveTheme","tableTheme","row","table","get","className","restProps","resolveProps","tableRow","jsx","twMerge","base","hovered"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\Table\\TableRow.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentPropsWithRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { useTableContext } from \"./TableContext\";\nimport { tableTheme } from \"./theme\";\n\nexport interface TableRowTheme {\n  base: string;\n  hovered: string;\n  striped: string;\n}\n\nexport interface TableRowProps extends ComponentPropsWithRef<\"tr\">, ThemingProps<TableRowTheme> {}\n\nexport const TableRow = forwardRef<HTMLTableRowElement, TableRowProps>((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    hoverable,\n    striped,\n  } = useTableContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [tableTheme.row, provider.theme?.table?.row, rootTheme?.row, props.theme],\n    [get(provider.clearTheme, \"table.row\"), get(rootClearTheme, \"row\"), props.clearTheme],\n    [get(provider.applyTheme, \"table.row\"), get(rootApplyTheme, \"row\"), props.applyTheme],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.tableRow);\n\n  return (\n    <tr\n      ref={ref}\n      data-testid=\"table-row-element\"\n      className={twMerge(theme.base, striped && theme.striped, hoverable && theme.hovered, className)}\n      {...restProps}\n    />\n  );\n});\n\nTableRow.displayName = \"TableRow\";\n"],"mappings":";;;;;;;;;;;AAYA,MAAEA,QAAM,GAAAC,UAAA,EAAAC,KAAA,EAAAC,GAAA;EACR,MAAI;IACAC,KAAA,EAAAC,SAAY;IACZC,UAAU,EAAEC,cAAc;IAC1BC,UAAS,EAAAC,cAAA;IACTC,SAAA;IACDC;EACD,IAAAC,eAAiB;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKV,KAAA,GAAWW,eAAc,CAC1B,CAACC,UAAI,CAAAC,GAAS,EAAAJ,QAAU,CAAET,KAAA,EAAAc,KAAY,EAAED,GAAG,EAACZ,SAAA,EAAAY,GAAc,EAAEf,KAAM,CAAAE,KAAE,CAAK,EACzE,CAACe,GAAG,CAACN,QAAQ,CAACP,UAAU,EAAE,WAAW,CAAC,EAAEa,GAAG,CAACZ,cAAc,EAAE,KAAK,CAAC,EAAEL,KAAK,CAACI,UAAU,GACrF,CAAAa,GAAA,CAAAN,QAAA,CAAAL,UAAA,gBAAAW,GAAA,CAAAV,cAAA,UAAAP,KAAA,CAAAM,UAAA,CACD;EACA;IAAAY,SAAA;IAAA,GAAAC;EAA0B,IAAAC,YAAA,CAAApB,KAAA,EAAAW,QAAA,CAAAX,KAAA,EAAAqB,QAAA;EAC5B,OAAQ,eAAAC,GAAA,CACJ,MACJ;IACMrB,GAAA;IACA,aAAW,qBAAoB;IAC/BiB,SAAG,EAAAK,OAAA,CAAArB,KAAA,CAAAsB,IAAA,EAAAf,OAAA,IAAAP,KAAA,CAAAO,OAAA,EAAAD,SAAA,IAAAN,KAAA,CAAAuB,OAAA,EAAAP,SAAA;IACT,GAAAC;EACG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
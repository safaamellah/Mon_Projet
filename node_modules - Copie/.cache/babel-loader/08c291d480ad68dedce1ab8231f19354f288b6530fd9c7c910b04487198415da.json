{"ast":null,"code":"const cache = /* @__PURE__ */new Map();\nfunction applyPrefix(classNames, prefix) {\n  if (!classNames.trim().length || !prefix.trim().length) {\n    return classNames;\n  }\n  classNames = classNames.trim();\n  prefix = prefix.trim();\n  const cacheKey = `${classNames}.${prefix}`;\n  const cacheValue = cache.get(cacheKey);\n  if (cacheValue) {\n    return cacheValue;\n  }\n  const result = classNames.split(/\\s+/).map(className => {\n    className = className.trim();\n    if (!className.length || className.startsWith(prefix)) {\n      return className;\n    }\n    return `${prefix}:${className}`;\n  }).join(\" \");\n  cache.set(cacheKey, result);\n  return result;\n}\nexport { applyPrefix };","map":{"version":3,"names":["cache","Map","applyPrefix","classNames","prefix","trim","length","cacheKey","cacheValue","get","result","split","map","className","startsWith","join","set"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\helpers\\apply-prefix.ts"],"sourcesContent":["const cache = new Map<string, string>();\n\n/**\n * Applies a prefix to class names.\n *\n * @param classNames - A string containing one or more CSS class names separated by spaces\n * @param prefix - The prefix to be added to each class name\n * @returns A new string with the prefix applied to each class name\n */\nexport function applyPrefix(classNames: string, prefix: string): string {\n  if (!classNames.trim().length || !prefix.trim().length) {\n    return classNames;\n  }\n\n  classNames = classNames.trim();\n  prefix = prefix.trim();\n\n  const cacheKey = `${classNames}.${prefix}`;\n  const cacheValue = cache.get(cacheKey);\n\n  if (cacheValue) {\n    return cacheValue;\n  }\n\n  const result = classNames\n    .split(/\\s+/)\n    .map((className) => {\n      className = className.trim();\n\n      if (!className.length || className.startsWith(prefix)) {\n        return className;\n      }\n\n      return `${prefix}:${className}`;\n    })\n    .join(\" \");\n\n  cache.set(cacheKey, result);\n\n  return result;\n}\n"],"mappings":"AACA,MAAMA,KAAK,kBAAmB,IAAIC,GAAG,EAAE;AAChC,SAASC,WAAWA,CAACC,UAAU,EAAEC,MAAM,EAAE;EAC9C,IAAI,CAACD,UAAU,CAACE,IAAI,EAAE,CAACC,MAAM,IAAI,CAACF,MAAM,CAACC,IAAI,EAAE,CAACC,MAAM,EAAE;IACtD,OAAOH,UAAU;EACrB;EACEA,UAAU,GAAGA,UAAU,CAACE,IAAI,EAAE;EAC9BD,MAAM,GAAGA,MAAM,CAACC,IAAI,EAAE;EACtB,MAAME,QAAQ,GAAG,GAAGJ,UAAU,IAAIC,MAAM,EAAE;EAC1C,MAAMI,UAAU,GAAGR,KAAK,CAACS,GAAG,CAACF,QAAQ,CAAC;EACtC,IAAIC,UAAU,EAAE;IACd,OAAOA,UAAU;EACrB;EACE,MAAME,MAAM,GAAGP,UAAU,CAACQ,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAAEC,SAAS,IAAK;IACxDA,SAAS,GAAGA,SAAS,CAACR,IAAI,EAAE;IAC5B,IAAI,CAACQ,SAAS,CAACP,MAAM,IAAIO,SAAS,CAACC,UAAU,CAACV,MAAM,CAAC,EAAE;MACrD,OAAOS,SAAS;IACtB;IACI,OAAO,GAAGT,MAAM,IAAIS,SAAS,EAAE;EACnC,CAAG,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;EACZf,KAAK,CAACgB,GAAG,CAACT,QAAQ,EAAEG,MAAM,CAAC;EAC3B,OAAOA,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
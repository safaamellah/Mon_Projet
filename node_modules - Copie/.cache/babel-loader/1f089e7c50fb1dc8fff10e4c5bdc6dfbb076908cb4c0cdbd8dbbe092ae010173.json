{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId, useRef, useState, useEffect } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { mergeRefs } from '../../helpers/merge-refs.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { megaMenuTheme } from './theme.js';\nconst MegaMenuDropdownToggle = forwardRef((props, ref) => {\n  const id = useId();\n  const innerRef = useRef(null);\n  const [controls, setControls] = useState(void 0);\n  const [isExpanded, setExpanded] = useState(void 0);\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([megaMenuTheme.dropdownToggle, provider.theme?.megaMenu?.dropdownToggle, props.theme], [get(provider.clearTheme, \"megaMenu.dropdownToggle\"), props.clearTheme], [get(provider.applyTheme, \"megaMenu.dropdownToggle\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.megaMenuDropdownToggle);\n  function findDropdown() {\n    const megaMenu = innerRef.current?.closest(\"nav\");\n    return megaMenu?.querySelector('[role=\"menu\"]');\n  }\n  function onClick() {\n    findDropdown()?.classList.toggle(\"hidden\");\n    setExpanded(!isExpanded);\n  }\n  useEffect(() => {\n    const dropdown = findDropdown();\n    const isDropdownHidden = dropdown?.classList.contains(\"hidden\");\n    setControls(dropdown?.id);\n    setExpanded(!isDropdownHidden);\n  }, []);\n  return /* @__PURE__ */jsx(\"button\", {\n    ref: mergeRefs([ref, innerRef]),\n    \"aria-controls\": controls,\n    \"aria-expanded\": isExpanded,\n    \"aria-haspopup\": \"menu\",\n    id,\n    onClick,\n    className: twMerge(theme.base, className),\n    ...restProps\n  });\n});\nMegaMenuDropdownToggle.displayName = \"MegaMenuDropdownToggle\";\nexport { MegaMenuDropdownToggle };","map":{"version":3,"names":["jsx","forwardRef","useId","useRef","useState","useEffect","get","mergeRefs","resolveProps","useResolveTheme","twMerge","useThemeProvider","megaMenuTheme","MegaMenuDropdownToggle","props","ref","id","innerRef","controls","setControls","isExpanded","setExpanded","provider","theme","dropdownToggle","megaMenu","clearTheme","applyTheme","className","restProps","megaMenuDropdownToggle","findDropdown","current","closest","querySelector","onClick","classList","toggle","dropdown","isDropdownHidden","contains","base","displayName"],"sources":["C:/Users/PC/mon-projet-react/node_modules/flowbite-react/dist/components/MegaMenu/MegaMenuDropdownToggle.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId, useRef, useState, useEffect } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { mergeRefs } from '../../helpers/merge-refs.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { megaMenuTheme } from './theme.js';\n\nconst MegaMenuDropdownToggle = forwardRef((props, ref) => {\n  const id = useId();\n  const innerRef = useRef(null);\n  const [controls, setControls] = useState(void 0);\n  const [isExpanded, setExpanded] = useState(void 0);\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [megaMenuTheme.dropdownToggle, provider.theme?.megaMenu?.dropdownToggle, props.theme],\n    [get(provider.clearTheme, \"megaMenu.dropdownToggle\"), props.clearTheme],\n    [get(provider.applyTheme, \"megaMenu.dropdownToggle\"), props.applyTheme]\n  );\n  const { className, ...restProps } = resolveProps(props, provider.props?.megaMenuDropdownToggle);\n  function findDropdown() {\n    const megaMenu = innerRef.current?.closest(\"nav\");\n    return megaMenu?.querySelector('[role=\"menu\"]');\n  }\n  function onClick() {\n    findDropdown()?.classList.toggle(\"hidden\");\n    setExpanded(!isExpanded);\n  }\n  useEffect(() => {\n    const dropdown = findDropdown();\n    const isDropdownHidden = dropdown?.classList.contains(\"hidden\");\n    setControls(dropdown?.id);\n    setExpanded(!isDropdownHidden);\n  }, []);\n  return /* @__PURE__ */ jsx(\n    \"button\",\n    {\n      ref: mergeRefs([ref, innerRef]),\n      \"aria-controls\": controls,\n      \"aria-expanded\": isExpanded,\n      \"aria-haspopup\": \"menu\",\n      id,\n      onClick,\n      className: twMerge(theme.base, className),\n      ...restProps\n    }\n  );\n});\nMegaMenuDropdownToggle.displayName = \"MegaMenuDropdownToggle\";\n\nexport { MegaMenuDropdownToggle };\n//# sourceMappingURL=MegaMenuDropdownToggle.js.map\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,iCAAiC;AACzD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,aAAa,QAAQ,YAAY;AAE1C,MAAMC,sBAAsB,GAAGZ,UAAU,CAAC,CAACa,KAAK,EAAEC,GAAG,KAAK;EACxD,MAAMC,EAAE,GAAGd,KAAK,CAAC,CAAC;EAClB,MAAMe,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC;EAChD,MAAM,CAACgB,UAAU,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC;EAClD,MAAMkB,QAAQ,GAAGX,gBAAgB,CAAC,CAAC;EACnC,MAAMY,KAAK,GAAGd,eAAe,CAC3B,CAACG,aAAa,CAACY,cAAc,EAAEF,QAAQ,CAACC,KAAK,EAAEE,QAAQ,EAAED,cAAc,EAAEV,KAAK,CAACS,KAAK,CAAC,EACrF,CAACjB,GAAG,CAACgB,QAAQ,CAACI,UAAU,EAAE,yBAAyB,CAAC,EAAEZ,KAAK,CAACY,UAAU,CAAC,EACvE,CAACpB,GAAG,CAACgB,QAAQ,CAACK,UAAU,EAAE,yBAAyB,CAAC,EAAEb,KAAK,CAACa,UAAU,CACxE,CAAC;EACD,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAU,CAAC,GAAGrB,YAAY,CAACM,KAAK,EAAEQ,QAAQ,CAACR,KAAK,EAAEgB,sBAAsB,CAAC;EAC/F,SAASC,YAAYA,CAAA,EAAG;IACtB,MAAMN,QAAQ,GAAGR,QAAQ,CAACe,OAAO,EAAEC,OAAO,CAAC,KAAK,CAAC;IACjD,OAAOR,QAAQ,EAAES,aAAa,CAAC,eAAe,CAAC;EACjD;EACA,SAASC,OAAOA,CAAA,EAAG;IACjBJ,YAAY,CAAC,CAAC,EAAEK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAC1ChB,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B;EACAf,SAAS,CAAC,MAAM;IACd,MAAMiC,QAAQ,GAAGP,YAAY,CAAC,CAAC;IAC/B,MAAMQ,gBAAgB,GAAGD,QAAQ,EAAEF,SAAS,CAACI,QAAQ,CAAC,QAAQ,CAAC;IAC/DrB,WAAW,CAACmB,QAAQ,EAAEtB,EAAE,CAAC;IACzBK,WAAW,CAAC,CAACkB,gBAAgB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,eAAgBvC,GAAG,CACxB,QAAQ,EACR;IACEe,GAAG,EAAER,SAAS,CAAC,CAACQ,GAAG,EAAEE,QAAQ,CAAC,CAAC;IAC/B,eAAe,EAAEC,QAAQ;IACzB,eAAe,EAAEE,UAAU;IAC3B,eAAe,EAAE,MAAM;IACvBJ,EAAE;IACFmB,OAAO;IACPP,SAAS,EAAElB,OAAO,CAACa,KAAK,CAACkB,IAAI,EAAEb,SAAS,CAAC;IACzC,GAAGC;EACL,CACF,CAAC;AACH,CAAC,CAAC;AACFhB,sBAAsB,CAAC6B,WAAW,GAAG,wBAAwB;AAE7D,SAAS7B,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
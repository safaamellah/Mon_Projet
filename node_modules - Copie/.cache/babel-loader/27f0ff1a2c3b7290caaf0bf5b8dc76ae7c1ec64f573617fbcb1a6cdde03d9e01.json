{"ast":null,"code":"var Views = /* @__PURE__ */(Views2 => {\n  Views2[Views2[\"Days\"] = 0] = \"Days\";\n  Views2[Views2[\"Months\"] = 1] = \"Months\";\n  Views2[Views2[\"Years\"] = 2] = \"Years\";\n  Views2[Views2[\"Decades\"] = 3] = \"Decades\";\n  return Views2;\n})(Views || {});\nvar WeekStart = /* @__PURE__ */(WeekStart2 => {\n  WeekStart2[WeekStart2[\"Sunday\"] = 0] = \"Sunday\";\n  WeekStart2[WeekStart2[\"Monday\"] = 1] = \"Monday\";\n  WeekStart2[WeekStart2[\"Tuesday\"] = 2] = \"Tuesday\";\n  WeekStart2[WeekStart2[\"Wednesday\"] = 3] = \"Wednesday\";\n  WeekStart2[WeekStart2[\"Thursday\"] = 4] = \"Thursday\";\n  WeekStart2[WeekStart2[\"Friday\"] = 5] = \"Friday\";\n  WeekStart2[WeekStart2[\"Saturday\"] = 6] = \"Saturday\";\n  return WeekStart2;\n})(WeekStart || {});\nfunction isDateInRange(date, minDate, maxDate) {\n  const dateTime = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n  if (minDate && maxDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime >= minDateTime && dateTime <= maxDateTime;\n  }\n  if (minDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    return dateTime >= minDateTime;\n  }\n  if (maxDate) {\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime <= maxDateTime;\n  }\n  return true;\n}\nfunction isDateEqual(date, selectedDate) {\n  date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  selectedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  return date.getTime() === selectedDate.getTime();\n}\nfunction isMonthEqual(date, selectedDate) {\n  return date.getMonth() === selectedDate.getMonth();\n}\nfunction getFirstDateInRange(date, minDate, maxDate) {\n  if (!isDateInRange(date, minDate, maxDate)) {\n    if (minDate && date < minDate) {\n      date = minDate;\n    } else if (maxDate && date > maxDate) {\n      date = maxDate;\n    }\n  }\n  return date;\n}\nfunction getFirstDayOfTheMonth(date, weekStart) {\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const dayOfWeek = firstDayOfMonth.getDay();\n  let diff = dayOfWeek - weekStart;\n  if (diff < 0) {\n    diff += 7;\n  }\n  return addDays(firstDayOfMonth, -diff);\n}\nfunction getWeekDays(lang, weekStart) {\n  const weekdays = [];\n  const date = /* @__PURE__ */new Date(0);\n  date.setDate(date.getDate() - date.getDay() + weekStart);\n  const formatter = new Intl.DateTimeFormat(lang, {\n    weekday: \"short\"\n  });\n  for (let i = 0; i < 7; i++) {\n    weekdays.push(formatter.format(addDays(date, i)));\n  }\n  return weekdays;\n}\nfunction addDays(date, amount) {\n  const newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + amount);\n  return newDate;\n}\nfunction addMonths(date, amount) {\n  const newDate = new Date(date);\n  newDate.setMonth(newDate.getMonth() + amount);\n  return newDate;\n}\nfunction addYears(date, amount) {\n  const newDate = new Date(date);\n  newDate.setFullYear(newDate.getFullYear() + amount);\n  return newDate;\n}\nfunction getFormattedDate(language, date, options) {\n  let defaultOptions = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  };\n  if (options) {\n    defaultOptions = options;\n  }\n  return new Intl.DateTimeFormat(language, defaultOptions).format(date);\n}\nfunction startOfYearPeriod(date, years) {\n  const year = date.getFullYear();\n  return Math.floor(year / years) * years;\n}\nfunction isDateInDecade(date, startYear) {\n  const year = date.getFullYear();\n  const endYear = startYear + 9;\n  return year >= startYear && year <= endYear;\n}\nfunction isDateRangeInDecade(startDate, endDate, decadeStart, decadeEnd) {\n  const startYear = startDate.getFullYear();\n  const endYear = endDate.getFullYear();\n  if (decadeStart && decadeEnd) {\n    const isStartYearInRange = isDateInRange(new Date(startYear, 0, 1), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n    const isEndYearInRange = isDateInRange(new Date(endYear, 11, 31), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n    return isStartYearInRange && isEndYearInRange;\n  }\n  return true;\n}\nexport { Views, WeekStart, addDays, addMonths, addYears, getFirstDateInRange, getFirstDayOfTheMonth, getFormattedDate, getWeekDays, isDateEqual, isDateInDecade, isDateInRange, isDateRangeInDecade, isMonthEqual, startOfYearPeriod };","map":{"version":3,"names":["Views","Views2","WeekStart","WeekStart2","isDateInRange","date","minDate","maxDate","dateTime","Date","getFullYear","getMonth","getDate","getTime","minDateTime","maxDateTime","isDateEqual","selectedDate","isMonthEqual","getFirstDateInRange","getFirstDayOfTheMonth","weekStart","firstDayOfMonth","dayOfWeek","getDay","diff","addDays","getWeekDays","lang","weekdays","setDate","formatter","Intl","DateTimeFormat","weekday","i","push","format","amount","newDate","addMonths","setMonth","addYears","setFullYear","getFormattedDate","language","options","defaultOptions","day","month","year","startOfYearPeriod","years","Math","floor","isDateInDecade","startYear","endYear","isDateRangeInDecade","startDate","endDate","decadeStart","decadeEnd","isStartYearInRange","isEndYearInRange"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\Datepicker\\helpers.ts"],"sourcesContent":["export enum Views {\n  Days = 0,\n  Months = 1,\n  Years = 2,\n  Decades = 3,\n}\n\nexport enum WeekStart {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport function isDateInRange(date: Date, minDate?: Date, maxDate?: Date): boolean {\n  const dateTime = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n\n  if (minDate && maxDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime >= minDateTime && dateTime <= maxDateTime;\n  }\n\n  if (minDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    return dateTime >= minDateTime;\n  }\n\n  if (maxDate) {\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime <= maxDateTime;\n  }\n\n  return true;\n}\n\nexport function isDateEqual(date: Date, selectedDate: Date): boolean {\n  date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  selectedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n\n  return date.getTime() === selectedDate.getTime();\n}\n\nexport function isMonthEqual(date: Date, selectedDate: Date): boolean {\n  return date.getMonth() === selectedDate.getMonth();\n}\n\nexport function getFirstDateInRange(date: Date, minDate?: Date, maxDate?: Date): Date {\n  if (!isDateInRange(date, minDate, maxDate)) {\n    if (minDate && date < minDate) {\n      date = minDate;\n    } else if (maxDate && date > maxDate) {\n      date = maxDate;\n    }\n  }\n  return date;\n}\n\nexport function getFirstDayOfTheMonth(date: Date, weekStart: WeekStart): Date {\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const dayOfWeek = firstDayOfMonth.getDay();\n\n  let diff = dayOfWeek - weekStart;\n  if (diff < 0) {\n    diff += 7;\n  }\n\n  return addDays(firstDayOfMonth, -diff);\n}\n\nexport function getWeekDays(lang: string, weekStart: WeekStart): string[] {\n  const weekdays: string[] = [];\n  const date = new Date(0);\n  date.setDate(date.getDate() - date.getDay() + weekStart);\n\n  const formatter = new Intl.DateTimeFormat(lang, { weekday: \"short\" });\n\n  for (let i = 0; i < 7; i++) {\n    weekdays.push(formatter.format(addDays(date, i)));\n  }\n\n  return weekdays;\n}\n\nexport function addDays(date: Date, amount: number): Date {\n  const newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + amount);\n  return newDate;\n}\n\nexport function addMonths(date: Date, amount: number): Date {\n  const newDate = new Date(date);\n  newDate.setMonth(newDate.getMonth() + amount);\n  return newDate;\n}\n\nexport function addYears(date: Date, amount: number): Date {\n  const newDate = new Date(date);\n  newDate.setFullYear(newDate.getFullYear() + amount);\n  return newDate;\n}\n\nexport function getFormattedDate(language: string, date: Date, options?: Intl.DateTimeFormatOptions): string {\n  let defaultOptions: Intl.DateTimeFormatOptions = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  };\n\n  if (options) {\n    defaultOptions = options;\n  }\n\n  return new Intl.DateTimeFormat(language, defaultOptions).format(date);\n}\n\nexport function startOfYearPeriod(date: Date, years: number): number {\n  const year = date.getFullYear();\n  return Math.floor(year / years) * years;\n}\n\nexport function isDateInDecade(date: Date, startYear: number): boolean {\n  const year = date.getFullYear();\n  const endYear = startYear + 9;\n  return year >= startYear && year <= endYear;\n}\n\nexport function isDateRangeInDecade(startDate: Date, endDate: Date, decadeStart: number, decadeEnd: number): boolean {\n  const startYear = startDate.getFullYear();\n  const endYear = endDate.getFullYear();\n\n  if (decadeStart && decadeEnd) {\n    // Check if the start and end years of the date range are within the decade\n    const isStartYearInRange = isDateInRange(\n      new Date(startYear, 0, 1),\n      new Date(decadeStart, 0, 1),\n      new Date(decadeEnd, 11, 31),\n    );\n    const isEndYearInRange = isDateInRange(\n      new Date(endYear, 11, 31),\n      new Date(decadeStart, 0, 1),\n      new Date(decadeEnd, 11, 31),\n    );\n\n    return isStartYearInRange && isEndYearInRange;\n  }\n\n  // If decadeStart or decadeEnd is not provided, treat it as an open-ended range\n  return true;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
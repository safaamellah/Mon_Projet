{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { CloseIcon } from '../../icons/close-icon.js';\nimport { HomeIcon } from '../../icons/home-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useDrawerContext } from './DrawerContext.js';\nimport { drawerTheme } from './theme.js';\nconst DrawerHeader = forwardRef((props, ref) => {\n  const id = useId();\n  const {\n    id: mainDivId,\n    isOpen,\n    onClose,\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme\n  } = useDrawerContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([drawerTheme.header, provider.theme?.drawer?.header, rootTheme?.header, props.theme], [get(provider.clearTheme, \"drawer.header\"), get(rootClearTheme, \"header\"), props.clearTheme], [get(provider.applyTheme, \"drawer.header\"), get(rootApplyTheme, \"header\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    closeIcon: CloseIcon$1 = CloseIcon,\n    title,\n    titleIcon: TitleIcon = HomeIcon,\n    ...restProps\n  } = resolveProps(props, provider.props?.drawerHeader);\n  return /* @__PURE__ */jsxs(\"div\", {\n    ref,\n    className,\n    ...restProps,\n    children: [/* @__PURE__ */jsxs(\"h5\", {\n      className: theme.inner.titleText,\n      id: mainDivId,\n      children: [/* @__PURE__ */jsx(TitleIcon, {\n        \"aria-hidden\": true,\n        className: theme.inner.titleIcon\n      }), title]\n    }), /* @__PURE__ */jsxs(\"button\", {\n      onClick: onClose,\n      type: \"button\",\n      \"data-testid\": \"close-drawer\",\n      className: theme.inner.closeButton,\n      children: [/* @__PURE__ */jsx(CloseIcon$1, {\n        \"aria-hidden\": true,\n        className: theme.inner.closeIcon\n      }), /* @__PURE__ */jsx(\"span\", {\n        className: theme.inner.titleCloseIcon,\n        children: \"Close menu\"\n      })]\n    }), /* @__PURE__ */jsx(\"span\", {\n      className: theme.collapsed[isOpen ? \"on\" : \"off\"],\n      id: `flowbite-drawer-header-${id}`,\n      children\n    })]\n  });\n});\nDrawerHeader.displayName = \"DrawerHeader\";\nexport { DrawerHeader };","map":{"version":3,"names":["DrawerHeader","forwardRef","props","ref","id","useId","mainDivId","isOpen","onClose","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","useDrawerContext","provider","useThemeProvider","useResolveTheme","drawerTheme","header","drawer","get","children","className","closeIcon","CloseIcon$1","CloseIcon","title","titleIcon","TitleIcon","HomeIcon","restProps","resolveProps","drawerHeader","jsxs","inner","titleText","jsx","onClick","type","closeButton","titleCloseIcon","collapsed"],"sources":["C:\\Users\\PC\\mon-projet-react\\node_modules\\flowbite-react\\src\\components\\Drawer\\DrawerHeader.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { forwardRef, useId } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { CloseIcon as DefaultCloseIcon } from \"../../icons/close-icon\";\nimport { HomeIcon } from \"../../icons/home-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { FlowbiteBoolean, ThemingProps } from \"../../types\";\nimport { useDrawerContext } from \"./DrawerContext\";\nimport { drawerTheme } from \"./theme\";\n\nexport interface DrawerHeaderTheme {\n  inner: {\n    titleIcon: string;\n    titleText: string;\n    closeButton: string;\n    closeIcon: string;\n    titleCloseIcon: string;\n  };\n  collapsed: FlowbiteBoolean;\n}\n\nexport interface DrawerHeaderProps extends ComponentProps<\"div\">, ThemingProps<DrawerHeaderTheme> {\n  closeIcon?: FC<ComponentProps<\"svg\">>;\n  title?: string;\n  titleIcon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const DrawerHeader = forwardRef<HTMLDivElement, DrawerHeaderProps>((props, ref) => {\n  const id = useId();\n\n  const {\n    id: mainDivId,\n    isOpen,\n    onClose,\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n  } = useDrawerContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [drawerTheme.header, provider.theme?.drawer?.header, rootTheme?.header, props.theme],\n    [get(provider.clearTheme, \"drawer.header\"), get(rootClearTheme, \"header\"), props.clearTheme],\n    [get(provider.applyTheme, \"drawer.header\"), get(rootApplyTheme, \"header\"), props.applyTheme],\n  );\n\n  const {\n    children,\n    className,\n    closeIcon: CloseIcon = DefaultCloseIcon,\n    title,\n    titleIcon: TitleIcon = HomeIcon,\n    ...restProps\n  } = resolveProps(props, provider.props?.drawerHeader);\n\n  return (\n    <div ref={ref} className={className} {...restProps}>\n      <h5 className={theme.inner.titleText} id={mainDivId}>\n        <TitleIcon aria-hidden className={theme.inner.titleIcon} />\n        {title}\n      </h5>\n      <button onClick={onClose} type=\"button\" data-testid=\"close-drawer\" className={theme.inner.closeButton}>\n        <CloseIcon aria-hidden className={theme.inner.closeIcon} />\n        <span className={theme.inner.titleCloseIcon}>Close menu</span>\n      </button>\n      <span className={theme.collapsed[isOpen ? \"on\" : \"off\"]} id={`flowbite-drawer-header-${id}`}>\n        {children}\n      </span>\n    </div>\n  );\n});\n\nDrawerHeader.displayName = \"DrawerHeader\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,YAAgB,GAAEC,UAAA,EAAAC,KAAA,EAAAC,GAAA;EAClB,MAAMC,EAAA,GAAAC,KAAA;EACR,MAAQ;IACJD,EAAA,EAAAE,SAAM;IACNC,MAAA;IACAC,OAAO;IACPC,KAAA,EAAAC,SAAY;IACZC,UAAU,EAAEC,cAAA;IACbC,UAAG,EAAAC;EACJ,IAAAC,gBAAiB;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKR,KAAA,GAAWS,eAAS,CACrB,CAACC,WAAI,CAAQC,MAAC,EAAAJ,QAAY,CAAAP,KAAA,EAAAY,MAAgB,EAAED,MAAI,EAAAV,SAAc,EAAEU,MAAA,EAAQlB,KAAG,CAAAO,KAAM,GACjF,CAACa,GAAG,CAACN,QAAQ,CAACL,UAAU,EAAE,eAAe,CAAC,EAAEW,GAAG,CAACV,cAAc,EAAE,QAAQ,CAAC,EAAEV,KAAK,CAACS,UAAU,GAC5F,CAAAW,GAAA,CAAAN,QAAA,CAAAH,UAAA,oBAAAS,GAAA,CAAAR,cAAA,aAAAZ,KAAA,CAAAW,UAAA,CACD;EACF,MAAI;IACAU,QAAA;IACAC,SAAS;IACTC,SAAK,EAAAC,WAAA,GAAAC,SAAA;IACLC,KAAA;IACAC,SAAG,EAAAC,SAAA,GAAAC,QAAA;IACJ,GAAGC;EACJ,IAAAC,YAAA,CAAA/B,KAAA,EAAuBc,QAAK,CAAKd,KAAI,EAAGgC,YAAW,CAAE;EACvD,sBAAyBC,IAAI,MAAI;IAAAhC,GAAS;IAAEqB,SAAM;IAAK,GAACQ,SAAW;IAAET,QAAE,GACvE,eAAAY,IAAsB,CAAG,IAAC;MAAAX,SAAa,EAAAf,KAAA,CAAA2B,KAAe,CAAAC,SAAM;MAAAjC,EAAS,EAAEE,SAAM;MAAKiB,QAAC,EAAS,CACtF,eAAAe,GAAA,CAAAR,SAAA;QAAA;QAAAN,SAAA,EAAAf,KAAA,CAAA2B,KAAA,CAAAP;MAAA,IACDD,KAAG;IACR,IACA,eAAAO,IAAsB,CAAG,QAAC;MAASI,OAAI,EAAA/B,OAAA;MAAagC,IAAE,EAAI,QAAE;MAAS,aAAa,EAAC,cAAY;MAAAhB,SAAA,EAAAf,KAAA,CAAA2B,KAAA,CAAAK,WAAA;MAAAlB,QAAA,GAC/F,eAAsBe,GAAG,CAACZ,WAAU;QAAA,aAAiB,MAAM;QAAAF,SAAA,EAAcf,KAAE,CAAA2B,KAAQ,CAAEX;MAAA,EAAY,EAC5F,eAAGa,GAAA;QAAAd,SAAA,EAAAf,KAAA,CAAA2B,KAAA,CAAAM,cAAA;QAAAnB,QAAA;MAAA;IACR,IACG,eAAGe,GAAA;MAAAd,SAAA,EAAAf,KAAA,CAAAkC,SAAA,CAAApC,MAAA;MAAAH,EAAA,4BAAAA,EAAA;MAAAmB;IAAA;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}